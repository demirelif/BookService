{"ast":null,"code":"var _jsxFileName = \"/Users/elifdemir/Desktop/week4/jss-exercise-react/src/Dashboard.js\";\nimport { toast } from \"react-toastify\";\nimport \"./App.css\";\nimport { withRouter } from \"react-router-dom\";\nimport React from \"react\";\nimport { Container, Grid, Header, Table, Label, Menu, Icon } from \"semantic-ui-react\";\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.getBooks();\n    };\n\n    this.getBooks = () => {\n      fetch(\"http://localhost:8081/api/book?\" + new URLSearchParams({\n        pageNumber: this.state.currentPage\n      }), {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"include\"\n      }).then(r => {\n        if (r.ok) {\n          return r;\n        }\n\n        if (r.status === 401 || r.status === 403 || r.status === 500) {\n          return Promise.reject(new Error(\"Bir hata olustu\"));\n        }\n      }).then(r => {\n        return r.json();\n      }).then(data => {\n        toast.info(`Toplamda ${data.totalElements} eleman bulundu.`);\n        this.setState({\n          book: data\n        });\n      }).catch(e => {\n        toast.error(\"e.message\");\n      });\n    };\n\n    this.changePageTo = i => {\n      this.setState({\n        currentPage: i\n      }, this.getBooks);\n    };\n\n    this.renderAuthors = book => {\n      const items = [];\n\n      if (book && book.authors) {}\n    };\n\n    this.render = () => {\n      const {\n        book\n      } = this.state;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Grid.Row, {\n        columns: \"equal\",\n        centered: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Grid.Column, {\n        width: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        size: \"huge\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 33\n        }\n      }, \" Kitaplar \"), /*#__PURE__*/React.createElement(Table, {\n        celled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Table.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Table.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Table.HeaderCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 41\n        }\n      }, \"Ad\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 41\n        }\n      }, \"Yazarlar\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 41\n        }\n      }, \"ISBN\"))), /*#__PURE__*/React.createElement(Table.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 37\n        }\n      }, book && book.content && book.content.map((value, index) => /*#__PURE__*/React.createElement(Table.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        ribbon: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 45\n        }\n      }, index + 1)), /*#__PURE__*/React.createElement(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 45\n        }\n      }, value.bookname), /*#__PURE__*/React.createElement(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 45\n        }\n      }, value.author), /*#__PURE__*/React.createElement(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"barcode\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 49\n        }\n      })), /*#__PURE__*/React.createElement(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 45\n        }\n      }, value && value.authors && value.authors.map(value => {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Icon, {\n          name: \"pencil alternate\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 57\n          }\n        }), value.name, /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 57\n          }\n        }));\n      }))))), /*#__PURE__*/React.createElement(Table.Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Table.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Table.HeaderCell, {\n        colSpan: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Menu, {\n        floated: \"right\",\n        pagination: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Menu.Item, {\n        onClick: () => {\n          this.changePageTo(this.state.currentPage - 1);\n        },\n        as: \"a\",\n        icon: true,\n        disabled: book.first,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"chevron left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 45\n        }\n      })), [...Array(book.totalPages).keys()].map((value, index) => /*#__PURE__*/React.createElement(Menu.Item, {\n        as: \"a\",\n        onClick: () => {\n          this.changePageTo(index);\n        },\n        active: book.number === index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 53\n        }\n      })), /*#__PURE__*/React.createElement(Menu.Item, {\n        onClick: () => {\n          this.changePageTo(this.state.currentPage + 1);\n        },\n        as: \"a\",\n        icon: true,\n        disabled: book.last,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"chevron right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 45\n        }\n      }))))))))))));\n    };\n\n    this.state = {\n      book: {},\n      currentPage: 0\n    };\n  }\n\n}\n\nexport default withRouter(Dashboard);","map":{"version":3,"sources":["/Users/elifdemir/Desktop/week4/jss-exercise-react/src/Dashboard.js"],"names":["toast","withRouter","React","Container","Grid","Header","Table","Label","Menu","Icon","Dashboard","Component","constructor","props","componentDidMount","getBooks","fetch","URLSearchParams","pageNumber","state","currentPage","method","headers","credentials","then","r","ok","status","Promise","reject","Error","json","data","info","totalElements","setState","book","catch","e","error","changePageTo","i","renderAuthors","items","authors","render","content","map","value","index","bookname","author","name","first","Array","totalPages","keys","number","last"],"mappings":"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","sourcesContent":["import {toast} from \"react-toastify\";\nimport \"./App.css\";\nimport { withRouter } from \"react-router-dom\";\nimport React from \"react\";\nimport { Container, Grid, Header, Table, Label, Menu, Icon } from \"semantic-ui-react\";\n\nclass Dashboard extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            book: {},\n            currentPage: 0,\n        };\n    }\n\n    componentDidMount = () => {\n        this.getBooks();\n    };\n\n    getBooks = () => {\n        fetch(\"http://localhost:8081/api/book?\" + new URLSearchParams({pageNumber: this.state.currentPage}),\n         {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            credentials: \"include\",\n        })\n        .then((r) => {\n            if(r.ok){\n                return r;\n            }\n            if( r.status===401 || r.status === 403 || r.status === 500 ){\n                return Promise.reject(new Error(\"Bir hata olustu\"));\n            }\n        })\n        .then((r) => {\n            return r.json();\n        })\n        .then((data) => {\n            toast.info(`Toplamda ${data.totalElements} eleman bulundu.`);\n            \n            this.setState({book:data});\n        })\n        .catch((e) => {\n            toast.error(\"e.message\");\n        });\n    };\n\n    changePageTo = (i) => {\n        this.setState( {currentPage:i}, this.getBooks);\n    };\n\n    renderAuthors = (book) => {\n        const items = [];\n    if (book && book.authors){\n\n    }\n\n    };\n\n    render = () => {\n        const{book} = this.state;\n        return (\n            <div className=\"App\">\n                <Container>\n                    <Grid>\n                        <Grid.Row columns=\"equal\" centered>\n                            <Grid.Column width={16}>\n                                <Header size=\"huge\"> Kitaplar </Header>\n                            <Table celled>\n                                    <Table.Header>\n                                    <Table.Row>\n                                        <Table.HeaderCell></Table.HeaderCell>\n                                        <Table.HeaderCell>Ad</Table.HeaderCell>\n                                        <Table.HeaderCell>Yazarlar</Table.HeaderCell>\n                                        <Table.HeaderCell>ISBN</Table.HeaderCell>\n                                    </Table.Row>\n                                    </Table.Header>\n\n                                    <Table.Body>\n                                        {book && \n                                        book.content &&\n                                        book.content.map((value,index) => (\n                                            <Table.Row>\n                                            <Table.Cell>\n                                            <Label ribbon>{index+1}</Label>\n                                            </Table.Cell>\n                                            <Table.Cell>{value.bookname}</Table.Cell>\n                                            <Table.Cell>{value.author}</Table.Cell>\n                                            <Table.Cell>\n                                                <Icon name=\"barcode\" />\n                                                \n                                            </Table.Cell>\n                                            <Table.Cell>\n                                                {value &&\n                                                value.authors && \n                                                value.authors.map((value) => {\n                                                    return (\n                                                        <>\n                                                        <Icon name=\"pencil alternate\" />\n                                                        {value.name}\n                                                        <br />\n                                                        </>\n                                                    );\n                                                })}\n                                            </Table.Cell>\n                                        </Table.Row>\n                                        ))}\n                                    </Table.Body>\n\n                                    <Table.Footer>\n                                \n                                    <Table.Row>\n                                        <Table.HeaderCell colSpan='4'>\n                                        <Menu floated='right' pagination>\n                                            <Menu.Item \n                                                onClick={ () => {\n                                                    this.changePageTo(this.state.currentPage - 1);\n                                                } }\n                                                as=\"a\"\n                                                icon\n                                                disabled={book.first}\n                                            >\n                                            <Icon name='chevron left' />\n                                            </Menu.Item>\n                                            {[...Array(book.totalPages).keys()].map(\n                                                (value,index) => ( \n                                                    <Menu.Item \n                                                        as='a' \n                                                        onClick={() => {\n                                                            this.changePageTo(index);\n                                                        }}\n                                                        active={book.number === index}\n                                                    >\n                                                    </Menu.Item>\n                                                )\n                                            )}\n                        \n                                            <Menu.Item \n                                                onClick={() => {\n                                                    this.changePageTo(this.state.currentPage + 1);\n                                                }}\n                                                as='a'\n                                                icon\n                                                disabled={book.last}\n                                            >\n                                            <Icon name='chevron right' />\n                                            </Menu.Item>\n                                        </Menu>\n                                        </Table.HeaderCell>\n                                    </Table.Row>\n                                    </Table.Footer>\n                                </Table>\n                            </Grid.Column>\n                        </Grid.Row>\n\n                    </Grid>\n                </Container>\n            </div>\n        );\n    };\n}\n\nexport default withRouter(Dashboard); "]},"metadata":{},"sourceType":"module"}