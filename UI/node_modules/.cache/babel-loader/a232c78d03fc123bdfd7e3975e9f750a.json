{"ast":null,"code":"var _jsxFileName = \"/Users/elifdemir/Desktop/week4/jss-exercise-react/src/Dashboard.js\";\nimport { toast } from \"react-toastify\";\nimport \"./App.css\";\nimport { withRouter } from \"react-router-dom\";\nimport React from \"react\";\nimport { Button, Container, Grid, Header, Table, Label, Menu, Icon, Popup, Responsive, Segment } from \"semantic-ui-react\";\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.getBooks();\n    };\n\n    this.statePage = {\n      activeItem: 'Kitaplar'\n    };\n\n    this.handleItemClick = (e, {\n      name\n    }) => this.setState({\n      activeItem: name\n    });\n\n    this.getBooks = () => {\n      fetch(\"http://localhost:8081/api/book?\" + new URLSearchParams({\n        pageNumber: this.state.currentPage\n      }), {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"include\"\n      }).then(r => {\n        if (r.ok) {\n          return r;\n        }\n\n        if (r.status === 401 || r.status === 403 || r.status === 500) {\n          return Promise.reject(new Error(\"Bir hata oluÅŸtu\"));\n        }\n      }).then(r => {\n        return r.json();\n      }).then(data => {\n        //toast.info(`Toplamda ${data.totalElements} eleman bulundu.`);\n        this.setState({\n          book: data\n        });\n      }).catch(e => {\n        toast.error(\"e.message\");\n      });\n    };\n\n    this.changePageTo = i => {\n      this.setState({\n        currentPage: i\n      }, this.getBooks);\n    };\n\n    this.renderAuthors = book => {\n      const items = [];\n\n      if (book && book.authors) {}\n    };\n\n    this.render = () => {\n      const {\n        book\n      } = this.state;\n      const {\n        activeItem\n      } = this.statePage;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Segment, {\n        clearing: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        as: \"h2\",\n        floated: \"left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }\n      }, \"Ho\\u015F Geldiniz X\"), /*#__PURE__*/React.createElement(Header, {\n        as: \"h2\",\n        floated: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Button.Group, {\n        floated: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }\n      }, \"One\"), /*#__PURE__*/React.createElement(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }\n      }, \"Two\"), /*#__PURE__*/React.createElement(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }\n      }, \"Three\")))), /*#__PURE__*/React.createElement(Grid, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Grid.Column, {\n        stretched: true,\n        width: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Segment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Grid.Row, {\n        columns: \"equal\",\n        centered: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Grid.Column, {\n        width: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        size: \"huge\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 33\n        }\n      }, \" Kitaplar \"), /*#__PURE__*/React.createElement(Table, {\n        celled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Table.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Table.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Table.HeaderCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 41\n        }\n      }, \"Ad\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 41\n        }\n      }, \"Yazar\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 41\n        }\n      }, \"ISBN\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 41\n        }\n      }))), /*#__PURE__*/React.createElement(Table.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 37\n        }\n      }, book && book.content && book.content.map((value, index) => /*#__PURE__*/React.createElement(Table.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        ribbon: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 45\n        }\n      }, book.size * book.number + (index + 1))), /*#__PURE__*/React.createElement(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 45\n        }\n      }, value.bookname), /*#__PURE__*/React.createElement(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 45\n        }\n      }, value.author), /*#__PURE__*/React.createElement(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"barcode\",\n        size: \"large\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 49\n        }\n      })), /*#__PURE__*/React.createElement(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Popup, {\n        trigger: /*#__PURE__*/React.createElement(Icon, {\n          name: \"heart outline\",\n          color: \"black\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 58\n          }\n        }),\n        content: \"Favorilere ekle\",\n        position: \"top center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 45\n        }\n      })), /*#__PURE__*/React.createElement(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Popup, {\n        trigger: /*#__PURE__*/React.createElement(Icon, {\n          name: \"bookmark outline\",\n          color: \"black\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 58\n          }\n        }),\n        content: \"Okuma listesine ekle\" //style={style}\n        ///inverted\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 45\n        }\n      }))))), /*#__PURE__*/React.createElement(Table.Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Table.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Table.HeaderCell, {\n        colSpan: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Menu, {\n        floated: \"right\",\n        pagination: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Menu.Item, {\n        onClick: () => {\n          this.changePageTo(this.state.currentPage - 1);\n        },\n        as: \"a\",\n        icon: true,\n        disabled: book.first,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"chevron left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 45\n        }\n      })), [...Array(book.totalPages).keys()].map((value, index) => /*#__PURE__*/React.createElement(Menu.Item, {\n        as: \"a\",\n        onClick: () => {\n          this.changePageTo(index);\n        },\n        active: book.number === index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 53\n        }\n      }, index + 1)), /*#__PURE__*/React.createElement(Menu.Item, {\n        onClick: () => {\n          this.changePageTo(this.state.currentPage + 1);\n        },\n        as: \"a\",\n        icon: true,\n        disabled: book.last,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"chevron right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 45\n        }\n      }))))))))))), /*#__PURE__*/React.createElement(Grid.Column, {\n        width: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Menu, {\n        fluid: true,\n        vertical: true,\n        tabular: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Menu.Item, {\n        name: \"Kitaplar\",\n        active: activeItem === 'Kitaplar',\n        onClick: this.handleItemClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Menu.Item, {\n        name: \"Favoriler\",\n        active: activeItem === 'Favoriler',\n        onClick: this.handleItemClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Menu.Item, {\n        name: \"Okuma Listesi\",\n        active: activeItem === 'Okuma Listesi',\n        onClick: this.handleItemClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }\n      }))))));\n    };\n\n    this.state = {\n      book: {},\n      currentPage: 0\n    };\n  }\n\n}\n\nexport default withRouter(Dashboard);","map":{"version":3,"sources":["/Users/elifdemir/Desktop/week4/jss-exercise-react/src/Dashboard.js"],"names":["toast","withRouter","React","Button","Container","Grid","Header","Table","Label","Menu","Icon","Popup","Responsive","Segment","Dashboard","Component","constructor","props","componentDidMount","getBooks","statePage","activeItem","handleItemClick","e","name","setState","fetch","URLSearchParams","pageNumber","state","currentPage","method","headers","credentials","then","r","ok","status","Promise","reject","Error","json","data","book","catch","error","changePageTo","i","renderAuthors","items","authors","render","content","map","value","index","size","number","bookname","author","first","Array","totalPages","keys","last"],"mappings":"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","sourcesContent":["import {toast} from \"react-toastify\";\nimport \"./App.css\";\nimport { withRouter } from \"react-router-dom\";\nimport React from \"react\";\nimport { Button, Container, Grid, Header, Table, Label, Menu, Icon, Popup, Responsive, Segment } from \"semantic-ui-react\";\n\nclass Dashboard extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            book: {},\n            currentPage: 0,\n        };\n    }\n\n    componentDidMount = () => {\n        this.getBooks();\n    };\n\n    statePage = { activeItem: 'Kitaplar' }\n\n    handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n  \n\n    getBooks = () => {\n        fetch(\"http://localhost:8081/api/book?\" + new URLSearchParams({pageNumber: this.state.currentPage}),\n         {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            credentials: \"include\",\n        })\n        .then((r) => {\n            if(r.ok){\n                return r;\n            }\n            if( r.status===401 || r.status === 403 || r.status === 500 ){\n                return Promise.reject(new Error(\"Bir hata oluÅŸtu\"));\n            }\n        })\n        .then((r) => {\n            return r.json();\n        })\n        .then((data) => {\n            //toast.info(`Toplamda ${data.totalElements} eleman bulundu.`);\n            \n            this.setState({book:data});\n        })\n        .catch((e) => {\n            toast.error(\"e.message\");\n        });\n    };\n\n    changePageTo = (i) => {\n        this.setState( {currentPage:i}, this.getBooks);\n    };\n\n    renderAuthors = (book) => {\n        const items = [];\n    if (book && book.authors){\n\n    }\n\n    };\n\n    render = () => {\n        const{ book } = this.state;\n        const { activeItem } = this.statePage\n        return (\n            <div className=\"App\">\n                <Container>\n                <Segment clearing>\n                <Header as='h2' floated='left'>\n                HoÅŸ Geldiniz X\n                </Header>\n                <Header as='h2' floated='right'>\n                    <Button.Group floated='right'>\n                    <Button>One</Button>\n                    <Button>Two</Button>\n                    <Button>Three</Button>\n                    </Button.Group>\n                </Header>\n                </Segment>\n                    <Grid>\n                    <Grid.Column stretched width={12}>\n                    <Segment>\n                        <Grid.Row columns=\"equal\" centered>\n                            <Grid.Column width={16}>\n                                <Header size=\"huge\"> Kitaplar </Header>\n                            <Table celled>\n                                    <Table.Header>\n                                    <Table.Row>\n                                        <Table.HeaderCell></Table.HeaderCell>\n                                        <Table.HeaderCell>Ad</Table.HeaderCell>\n                                        <Table.HeaderCell>Yazar</Table.HeaderCell>\n                                        <Table.HeaderCell>ISBN</Table.HeaderCell>\n                                        <Table.HeaderCell></Table.HeaderCell>\n                                        <Table.HeaderCell></Table.HeaderCell>\n                                    </Table.Row>\n                                    </Table.Header>\n\n                                    <Table.Body>\n                                        {book && \n                                        book.content &&\n                                        book.content.map((value,index) => (\n                                            <Table.Row>\n                                            <Table.Cell>\n                                            <Label ribbon>{book.size * book.number + (index+1)}</Label>\n                                            </Table.Cell>\n                                            <Table.Cell>{value.bookname}</Table.Cell>\n                                            <Table.Cell>{value.author}</Table.Cell>\n                                            <Table.Cell>\n                                                <Icon name=\"barcode\" size=\"large\"/>   \n                                            </Table.Cell>\n                                            <Table.Cell>\n                                            <Popup\n                                                trigger={<Icon name='heart outline' color='black' />}\n                                                content='Favorilere ekle'\n                                                position='top center'\n                                            /> \n                                            </Table.Cell>\n                                            <Table.Cell>\n                                            <Popup\n                                                trigger={<Icon name='bookmark outline' color='black' />}\n                                                content='Okuma listesine ekle'\n                                                //style={style}\n                                                ///inverted\n                                            />\n                                            </Table.Cell>\n                                        </Table.Row>\n                                        ))}\n                                    </Table.Body>\n\n                                    <Table.Footer>\n                                \n                                    <Table.Row>\n                                        <Table.HeaderCell colSpan='6'>\n                                        <Menu floated='right' pagination>\n                                            <Menu.Item \n                                                onClick={ () => {\n                                                    this.changePageTo(this.state.currentPage - 1);\n                                                } }\n                                                as=\"a\"\n                                                icon\n                                                disabled={book.first}\n                                            >\n                                            <Icon name='chevron left' />\n                                            </Menu.Item>\n                                            {[...Array(book.totalPages).keys()].map(\n                                                (value,index) => ( \n                                                    <Menu.Item \n                                                        as='a' \n                                                        onClick={() => {\n                                                            this.changePageTo(index);\n                                                        }}\n                                                        active={book.number === index}\n                                                    >\n                                                        {index+1}\n                                                    </Menu.Item>\n                                                )\n                                            )}\n                        \n                                            <Menu.Item \n                                                onClick={() => {\n                                                    this.changePageTo(this.state.currentPage + 1);\n                                                }}\n                                                as='a'\n                                                icon\n                                                disabled={book.last}\n                                            >\n                                            <Icon name='chevron right' />\n                                            </Menu.Item>\n                                        </Menu>\n                                        </Table.HeaderCell>\n                                    </Table.Row>\n                                    </Table.Footer>\n                                </Table>\n                            </Grid.Column>\n                        </Grid.Row>\n                        </Segment>\n        </Grid.Column>                           \n        \n        <Grid.Column width={4}>\n          <Menu fluid vertical tabular='right'>\n            <Menu.Item\n              name='Kitaplar'\n              active={activeItem === 'Kitaplar'}\n              onClick={this.handleItemClick}\n            />\n            <Menu.Item\n              name='Favoriler'\n              active={activeItem === 'Favoriler'}\n              onClick={this.handleItemClick}\n            />\n            <Menu.Item\n              name='Okuma Listesi'\n              active={activeItem === 'Okuma Listesi'}\n              onClick={this.handleItemClick}\n            />\n          </Menu>\n        </Grid.Column>\n                    </Grid>\n                </Container>\n            </div>\n        );\n    };\n}\n\nexport default withRouter(Dashboard); "]},"metadata":{},"sourceType":"module"}