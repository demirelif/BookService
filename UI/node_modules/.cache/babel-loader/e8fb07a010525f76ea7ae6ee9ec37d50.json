{"ast":null,"code":"var _jsxFileName = \"/Users/elifdemir/Desktop/week4/jss-exercise-react/src/Login.js\";\nimport React, { useState } from \"react\";\nimport { Container, Grid, Divider, Form, Button } from \"semantic-ui-react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./App.css\";\nimport { toast } from \"react-toastify\";\n\nconst Login = ({\n  showRegisterLink\n}) => {\n  const history = useHistory();\n  const [usernamePassword, setUsernamePassword] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const [usernamePasswordError, setUsernamePasswordError] = useState({\n    username: null,\n    password: null\n  });\n\n  const handleChange = e => {\n    const {\n      currentTarget\n    } = e;\n    const {\n      value,\n      name\n    } = currentTarget;\n    setUsernamePassword({ ...usernamePassword,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const {\n      username,\n      password\n    } = usernamePassword;\n\n    if (username.length < 5 || usernamePassword.length > 255) {\n      setUsernamePasswordError({ ...usernamePasswordError,\n        username: \"Lütfen kullanıcı adınızı kontrol edin\"\n      });\n      return;\n    } else {\n      setUsernamePasswordError({\n        username: null\n      });\n    }\n\n    if (password.length < 3 || password.length > 255) {\n      setUsernamePasswordError({ ...usernamePasswordError,\n        password: \"Lütfen şifrenizi kontrol edin\"\n      });\n      return;\n    }\n\n    const formData = new URLSearchParams();\n    formData.append(\"username\", username);\n    formData.append(\"password\", password);\n    fetch(\"http://localhost:8081/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      },\n      body: formData,\n      credentials: \"include\"\n    }).then(r => {\n      if (r.ok) {\n        return r;\n      }\n\n      if (r.status === 401 || r.status === 403 || r.status === 500) {\n        return Promise.reject(new Error(\"Bir hata oluştu\"));\n      }\n    }).then(response => {\n      toast.success(\"Giriş başarılı! Yönlendiriliyorsunuz.\");\n      setTimeout(() => {\n        history.push(\"/dashboard\");\n      }, 3000);\n    }).catch(e => {\n      toast.error(\"e.message\");\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Row, {\n    columns: \"equal\",\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 29\n    }\n  }, \"Giris Sayfasi\", /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    onReset: e => {\n      e.preventDefault();\n      setUsernamePassword({\n        username: \"\",\n        password: \"\"\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 41\n    }\n  }, \" Kullanici adi\"), /*#__PURE__*/React.createElement(Form.Input, {\n    type: \"email\",\n    name: \"username\",\n    required: true,\n    error: usernamePasswordError.username,\n    value: usernamePassword.username,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 37\n    }\n  }, \" Sifre\"), /*#__PURE__*/React.createElement(Form.Input, {\n    type: \"password\",\n    name: \"password\",\n    required: true,\n    error: usernamePasswordError.password,\n    value: usernamePassword.password,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(Button.Group, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 41\n    }\n  }, \"Giri\\u015F Yap\"))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 37\n    }\n  }), showRegisterLink && /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    color: \"primary\",\n    fluid: true,\n    size: \"tiny\",\n    onClick: () => {\n      history.push(\"/\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 41\n    }\n  }, \"Hesabiniz yok mu? Kayit olun.\"))))));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/elifdemir/Desktop/week4/jss-exercise-react/src/Login.js"],"names":["React","useState","Container","Grid","Divider","Form","Button","useHistory","toast","Login","showRegisterLink","history","usernamePassword","setUsernamePassword","username","password","usernamePasswordError","setUsernamePasswordError","handleChange","e","currentTarget","value","name","handleSubmit","preventDefault","length","formData","URLSearchParams","append","fetch","method","headers","body","credentials","then","r","ok","status","Promise","reject","Error","response","success","setTimeout","push","catch","error"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Container, Grid, Divider, Form, Button } from \"semantic-ui-react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./App.css\";\nimport { toast } from \"react-toastify\";\n\nconst Login = ( { showRegisterLink }) => {\n    const history = useHistory();\n\n    const [usernamePassword, setUsernamePassword] = useState ({\n        username: \"\",\n        password: \"\"\n    });\n\n    const [usernamePasswordError, setUsernamePasswordError ] = useState ({\n        username: null,\n        password: null,\n    });\n\n    const handleChange = (e) => {\n        const {currentTarget} = e;\n        const{value, name} = currentTarget;\n        setUsernamePassword({\n            ...usernamePassword, [name]: value\n        });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const { username, password } = usernamePassword;\n        if( username.length < 5 || usernamePassword.length > 255 ){\n            setUsernamePasswordError({\n                ...usernamePasswordError,\n                username: \"Lütfen kullanıcı adınızı kontrol edin\",\n            });\n            return;\n        }else {\n            setUsernamePasswordError({\n                username:null,\n            });\n        }\n        if ( password.length < 3 || password.length > 255 ){\n            setUsernamePasswordError({\n                ...usernamePasswordError,\n                password: \"Lütfen şifrenizi kontrol edin\",\n            });\n            return;\n        }\n        \n        const formData = new URLSearchParams();\n        formData.append(\"username\", username);\n        formData.append(\"password\", password);\n        fetch(\"http://localhost:8081/login\",{\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/x-www-form-urlencoded\",\n            },\n            body: formData,\n            credentials : \"include\",\n        })\n        .then((r) => {\n            if(r.ok){\n                return r;\n            }\n            if( r.status===401 || r.status === 403 || r.status === 500 ){\n                return Promise.reject(new Error(\"Bir hata oluştu\"));\n            }\n        })\n        .then((response) => {\n            toast.success(\"Giriş başarılı! Yönlendiriliyorsunuz.\");\n            setTimeout( () => {    \n                history.push(\"/dashboard\");\n            }, 3000);\n        })\n        .catch((e) => {\n            toast.error(\"e.message\");\n        } );\n    };\n        return (\n            <div className=\"App\">\n                <Container>\n                    <Grid>\n                        <Grid.Row columns=\"equal\" centered>\n                            <Grid.Column width={8}>\n                                Giris Sayfasi\n                                <Form \n                                onSubmit = {handleSubmit}\n                                onReset ={(e) => {\n                                    e.preventDefault();\n                                    setUsernamePassword({ username: \"\", password: \"\"});\n                                }}\n                                >\n                                    <Form.Field>\n                                        <label> Kullanici adi</label>\n                                        <Form.Input\n                                        type=\"email\"\n                                        name=\"username\"\n                                        required\n                                        error={usernamePasswordError.username}\n                                        value={usernamePassword.username}\n                                        onChange={handleChange}\n                                        />\n                                    </Form.Field>\n\n                                    <Form.Field>\n                                    <label> Sifre</label>\n                                        <Form.Input\n                                        type=\"password\"\n                                        name=\"password\"\n                                        required\n                                        error={usernamePasswordError.password}\n                                        value={usernamePassword.password}\n                                        onChange={handleChange}\n                                        />\n                                    </Form.Field>\n\n                                    <Button.Group fluid>\n                                       \n                                        <Button type=\"submit\">Giriş Yap</Button>\n                                    </Button.Group>\n                                    </Form>\n                                    <Divider />\n                        \n                                    {showRegisterLink && (\n                                        <Button \n                                        type=\"button\"\n                                        color=\"primary\"\n                                        fluid\n                                        size = \"tiny\"\n                                        onClick={() => {\n                                            history.push(\"/\");\n                                        }}\n                                        >Hesabiniz yok mu? Kayit olun.</Button>\n                                    )}\n                            </Grid.Column>\n                        </Grid.Row>\n                    </Grid>\n                </Container>\n            </div>\n        );\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}